/* The static keyword is used to indicate that the cmp function is a class member, 
rather than an instance member. This means that the cmp function will be shared by all instances of the Solution class, 
and it will only be initialized once. This can be useful in this case, 
because the cmp function does not need to know anything about the specific instance of the Solution class that is calling it.

If the static keyword was not used, 
then the cmp function would need to be initialized for each instance of the Solution class. 
This would be inefficient, because the cmp function would always return the same value, 
regardless of the instance of the Solution class that is calling it. */

class Solution
{
    public:
    
    static bool cmp(pair<int,int> a, pair<int,int> b){
        return a.second < b.second;
    }
    
    int maxMeetings(int start[], int end[], int n)
    {
        vector< pair<int,int> > v;
        
        for(int i=0; i<n; i++){
            pair<int,int> p = make_pair(start[i], end[i]);
            v.push_back(p);
        }
        sort(v.begin(), v.end(), cmp);
        
        int count = 1;
        int ansEnd = v[0].second;
        
        for(int i=1; i<n; i++){
            if(v[i].first > ansEnd){
                count++;
                ansEnd = v[i].second;
            }
        }
        return count;
    }
};
