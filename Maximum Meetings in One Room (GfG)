class Solution{
public:
    
    static bool cmp(pair<int,pair<int, int> > a, pair<int,pair<int, int> > b){
        return a.second < b.second;
    }
    
    vector<int> maxMeetings(int N,vector<int> &S,vector<int> &F){
        vector<pair<int,pair<int, int> > > v;
        
        for(int i = 0; i < N; i++){
            pair<int,pair<int, int> > p = make_pair(S[i], make_pair(F[i], i + 1));
            v.push_back(p);
        }
        
        sort(v.begin(), v.end(), cmp);
        
        vector<int> ans;
        ans.push_back(v[0].second.second);
        
        int ansEnd = v[0].second.first;
        
        for(int i = 1; i < N; i++){
            if(v[i].first > ansEnd){
                ans.push_back(v[i].second.second);
                ansEnd = v[i].second.first;
            }
        }
        sort(ans.begin(), ans.end());
        return ans;
    }
};
